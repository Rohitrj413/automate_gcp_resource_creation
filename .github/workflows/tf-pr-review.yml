name: "Terraform PR Review with Vertex AI Gemini"

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/*.tf'

jobs:
  tf-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: ⚙️ Checkout repository (Fetch History for Diff)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # CRITICAL: Gets full history required for accurate git diff

      # ... (Set up Python, Install dependencies, Authenticate are the same) ...

      - name: Generate summary of CHANGED files 🚀
        id: generate
        run: |
          # 1. Define SHAs for comparison
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          DELIMITER="EOF_SUMMARY_OUTPUT"
          
          # 2. Get the list of changed .tf files
          # git diff --name-only compares the two SHAs and filters for files ending in .tf
          CHANGED_TF_FILES=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA" | grep '\.tf$')
          
          echo "Changed Terraform files detected:"
          echo "$CHANGED_TF_FILES"
          
          # 3. Execute Python script, passing the list of files as the argument
          # Output is captured to a temp file to separate LLM output from logs
          SCRIPT_OUTPUT_TEMP="script_output.txt"
          
          # The entire list of files is passed as one argument (wrapped in quotes)
          python ./scripts/generate_summary.py "$CHANGED_TF_FILES" > "$SCRIPT_OUTPUT_TEMP" 2>&1
          
          echo "Script Execution Logs:"
          cat "$SCRIPT_OUTPUT_TEMP"
          
          # 4. Use AWK to extract content between the START and END tokens printed by Python.
          SUMMARY=$(awk "/SUMMARY_TOKEN_START::${DELIMITER}/{flag=1; next} /SUMMARY_TOKEN_END::${DELIMITER}/{flag=0} flag" "$SCRIPT_OUTPUT_TEMP")
          
          # 5. Set the multiline output using the GitHub-recommended EOF marker
          echo "summary_output<<EOF_GHA" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF_GHA" >> $GITHUB_OUTPUT

        env:
          GOOGLE_CLOUD_PROJECT: ${{ secrets.GCP_PROJECT_ID }}

      - name: Post comment to PR 💬
        uses: actions/github-script@v6
        with:
          script: |
            // Reads the fully preserved multiline string
            const summary = `${{ steps.generate.outputs.summary_output }}`; 
            
            const fullComment = `
            ### 🤖 Terraform PR Review (Vertex AI - Gemini) 🤖

            **Summary of Changes:**
            
            ${summary}
            
            ---
            *Note: This summary was generated by Google's Gemini model by analyzing the raw Terraform code.*
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: fullComment
            })
